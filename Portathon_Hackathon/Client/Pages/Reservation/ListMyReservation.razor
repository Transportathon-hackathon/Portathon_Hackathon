@page "/Reservation/MyReservations"
@inject IReservationManager _reserveManager
@inject AuthenticationStateProvider _authStateProvider
<!-- Card -->
@if(Roles == "Company")
{
    <h1>There is no access to this page as a company only users can make changes on rezervations</h1>
}
else
{
    

@foreach (var item in _reservations)
{
    <div class="card">

        <!-- Card image -->
        <div class="view overlay">
            <img class="card-img-top" src="/image/AdobeStock_246515233_Preview.jpeg"
                 alt="Card image cap">
            <a href="#!">
                <div class="mask rgba-white-slight"></div>
            </a>
        </div>

        <!-- Card content -->
        <div class="card-body">

            <!-- Title -->
            <h4 class="card-title">@item.OtherDetails</h4>
            <!-- Text -->
            <p class="card-text">
               @item.ReservationCase
            </p>
            <!-- Button -->
            <a href="/Reservation/UniqeReservation/@item.ReservationId" class="btn btn-primary">Rezervasyonu Görüntüle</a>

        </div>

    </div>

}
<!-- Card -->
}
@code {
    List<ReservationReturnDTO> _reservations = new List<ReservationReturnDTO>();
    string? Roles = "User";
    protected override async Task OnInitializedAsync()
    {
        string? role = (await _authStateProvider.GetAuthenticationStateAsync()).User.Claims
      .FirstOrDefault(x => x.Type == System.Security.Claims.ClaimTypes.Role).Value;

        Roles = role;
        var result = await _reserveManager.GetReservationByUser();
        _reservations = result.Data;

       
    }
}
