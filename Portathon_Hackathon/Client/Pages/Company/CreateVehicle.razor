@page "/Company/CreateVehicle/{companyId:int}" 
@inject IVehicleService _vehiclseManager
@inject NavigationManager _navigationManager
@inject IToastService _toastrService

<EditForm Model="vehicleDTO" OnValidSubmit="CreateVehicleAsync">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="container ">
        <div class="row justify-content-center">
            <div class="col-md-10 mt-5">

        <div class="form-group col-5">
        <label for="vehicleType" class="form-label">Vehicle Type</label>
        <select class="form-control" id="vehicleType" @bind="vehicleDTO.VehicleType">
            <option value="Truck">Truck</option>
            <option value="Lory">Lory</option>
        </select>
    </div>

    <div class="form-group col-5">
        <label for="capacity" class="form-label">Capacity</label>
        <input type="number" class="form-control" id="capacity" @bind="vehicleDTO.Capacity" step="0.01">
    </div>

    <div class="form-group col-5">
        <label for="technicDetail" class="form-label">Technical Details</label>
        <input type="text" class="form-control" id="technicDetail" @bind="vehicleDTO.TechnicDetail">
    </div>

    <div class="form-group col-5">
        <label for="plateNumber" class="form-label">Plate Number</label>
        <input type="text" class="form-control" id="plateNumber" @bind="vehicleDTO.PlateNumber">
    </div>

    <div class="form-group col-5">
        <label for="chauffeurName" class="form-label">Chauffeur Name</label>
        <input type="text" class="form-control" id="chauffeurName" @bind="vehicleDTO.ChauffeurName">
    </div>
    <ValidationSummary></ValidationSummary>
    <br /><br />
    <button type="submit" class="btn btn-primary">Create Vehicle</button>
    </div>
       </div>
    </div>
</EditForm>

@code {


    public VehicleDTO vehicleDTO = new VehicleDTO();

    [Parameter]
    public int companyId { get; set; }

    protected override void OnInitialized()
    {
        if (int.TryParse(_navigationManager.Uri.Split('/').Last(), out int parsedCompanyId))
        {
            companyId = parsedCompanyId;
        }
    }

    public async Task CreateVehicleAsync()
    {
        var result =await _vehiclseManager.CreateVehicle(vehicleDTO, companyId);

        if(result.Success == true)
        {
            _toastrService.ShowSuccess("Vehicle Created");
            _navigationManager.NavigateTo("/Company/Home");
        }
        else
        {
            _toastrService.ShowError("A problem occured While Creating Vehicle!");
        }

    }
}
