@page "/Company/CreateCompany"
@using BlazorInputFile;
@using System.IO
@attribute [Authorize]
@inject ICompanyManager _companyManager;
@inject AuthenticationStateProvider _authStateProvider
@inject NavigationManager _navigationManager
@inject IFileUploadService _fileUploadService

@if(Roles == "Company")
{

    <EditForm Model="company" OnValidSubmit="AddCompany">
        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="companyName" class="form-label">Company Name</label>
                <input type="text" class="form-control" id="companyName" placeholder="Your Company Name" @bind="company.CompanyName" required>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="companyLogo" class="form-label">Company Logo</label>

                <BlazorInputFile.InputFile OnChange="HandleImageUpload"></BlazorInputFile.InputFile>
            </div>
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Save Company</button>
        </div>
    </EditForm>
}
else
{
    <_accessDenied></_accessDenied>
}



@code {
    string? Roles = "";
    public CompanyDTO company = new CompanyDTO();
    public bool isStatus = false;
    string status;
    private long maxFileSize = 1024 * 15;
    private int maxAllowedFiles = 3;
    private bool isLoading;
    private ElementReference elementReference;
    IFileListEntry file;
    protected override async Task OnInitializedAsync()
    {
        string? role = (await _authStateProvider.GetAuthenticationStateAsync()).User.Claims
        .FirstOrDefault(x => x.Type == System.Security.Claims.ClaimTypes.Role).Value;

        Roles = role;
    }


    private async Task HandleImageUpload(IFileListEntry[] files)
    {
         await Task.Run(() =>
         {
            file = files.FirstOrDefault();
         });
    }
        

    private async Task AddCompany()
    {
        company.ImageUrl = file.Name;

        var response = await _companyManager.CreateCompany(company);
        if(response.Success != false)
        {
            await _fileUploadService.FileUploadAsync(file, "FolderName",1);
            isStatus = true;
            _navigationManager.NavigateTo("/Company/GetAllCompany");

        }
    }


   


}
